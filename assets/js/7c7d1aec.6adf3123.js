(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return s}));var r=n(3),o=(n(0),n(134));const a={id:"migration_from_2_to_3",title:"Migration from 2.x to 3.x",sidebar_label:"Migration from 2.x to 3.x",slug:"/migration-from-2-to-3"},c={unversionedId:"migration_from_2_to_3",id:"migration_from_2_to_3",isDocsHomePage:!1,title:"Migration from 2.x to 3.x",description:"This is a crash guide to updrage RocketJump from version 2.x to 3.x version.",source:"@site/docs/migration_from_2_to_3.md",slug:"/migration-from-2-to-3",permalink:"/react-rocketjump/docs/next/migration-from-2-to-3",editUrl:"https://github.com/inmagik/react-rocketjump/edit/master/website/docs/migration_from_2_to_3.md",version:"current",sidebar_label:"Migration from 2.x to 3.x",sidebar:"someSidebar",previous:{title:"Mutations Pending Plugin",permalink:"/react-rocketjump/docs/next/plugins/mutationsPending"}},i=[{value:"Rewrite custom plugin from <code>rj()</code> to <code>rjPlugin()</code>",id:"rewrite-custom-plugin-from-rj-to-rjplugin",children:[]},{value:"No more plugin computed",id:"no-more-plugin-computed",children:[{value:"<code>rjPlainList</code>",id:"rjplainlist",children:[]},{value:"<code>rjList</code>",id:"rjlist",children:[]}]},{value:"No more special <code>@mutation</code> computed",id:"no-more-special-mutation-computed",children:[]},{value:"Selectors use all state instead of root state",id:"selectors-use-all-state-instead-of-root-state",children:[]},{value:"Compose reducer init",id:"compose-reducer-init",children:[]},{value:"Rename <code>makeAction</code> to <code>makeEffectAction</code>",id:"rename-makeaction-to-makeeffectaction",children:[]},{value:"Change behaviour of custom effect action",id:"change-behaviour-of-custom-effect-action",children:[]},{value:"Deprecated <code>rj.configured()</code>",id:"deprecated-rjconfigured",children:[]}],l={toc:i};function s({components:e,...t}){return Object(o.b)("wrapper",Object(r.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"This is a crash guide to updrage RocketJump from version ",Object(o.b)("inlineCode",{parentName:"p"},"2.x")," to ",Object(o.b)("inlineCode",{parentName:"p"},"3.x")," version."),Object(o.b)("h2",{id:"rewrite-custom-plugin-from-rj-to-rjplugin"},"Rewrite custom plugin from ",Object(o.b)("inlineCode",{parentName:"h2"},"rj()")," to ",Object(o.b)("inlineCode",{parentName:"h2"},"rjPlugin()")),Object(o.b)("p",null,"If you have written ",Object(o.b)("strong",{parentName:"p"},"custom")," plugin simply replace the plugin code from using\n",Object(o.b)("inlineCode",{parentName:"p"},"rj()")," to ",Object(o.b)("inlineCode",{parentName:"p"},"rjPlugin()"),". ",Object(o.b)("br",null),"\nIf you use core plugins are alredy converted."),Object(o.b)("p",null,"From v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\n\nconst myPlugin = rj({\n  // ... Plugin Code ...\n})\n\nconst MyObj = rj(myPlugin, () => Promise.resolve())\n")),Object(o.b)("p",null,"To v3:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js",metastring:"{3,3}","{3,3}":!0},"import { rj, rjPlugin } from 'react-rocketjump'\n\nconst myPlugin = rjPlugin({\n  // ... Plugin Code ...\n})\n\nconst MyObj = rj(myPlugin, () => Promise.resolve())\n")),Object(o.b)("h2",{id:"no-more-plugin-computed"},"No more plugin computed"),Object(o.b)("p",null,"Computed are no more availables on plugins so if you use plugins that provide\ncomputed you should specify them manually.",Object(o.b)("br",null)),Object(o.b)("p",null,"The following examples are tired to RocketJump core plugins the same thoughs\ncan be applied to your custom plugin."),Object(o.b)("h3",{id:"rjplainlist"},Object(o.b)("inlineCode",{parentName:"h3"},"rjPlainList")),Object(o.b)("p",null,"From v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\nimport rjPlainList from 'react-rocketjump/plugins/plainList'\n\nconst MyObj = rj(rjPlainList(), {\n  effect: () => Promise.resolve(),\n})\n")),Object(o.b)("p",null,"To v3:"),Object(o.b)("p",null,"To have the same computed on RjObject."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\nimport rjPlainList from 'react-rocketjump/plugins/plainList'\n\nconst MyObj = rj(rjPlainList(), {\n  effect: () => Promise.resolve(),\n  computed: {\n    error: 'getError',\n    loading: 'isLoading',\n    list: 'getList',\n  },\n})\n")),Object(o.b)("h3",{id:"rjlist"},Object(o.b)("inlineCode",{parentName:"h3"},"rjList")),Object(o.b)("p",null,"From v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\nimport rjList from 'react-rocketjump/plugins/list'\n\nconst MyObj = rj(rjList(), {\n  effect: () => Promise.resolve(),\n})\n")),Object(o.b)("p",null,"To v3:"),Object(o.b)("p",null,"To have the same computed on RjObject."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\nimport rjList from 'react-rocketjump/plugins/list'\n\nconst MyObj = rj(rjList(), {\n  effect: () => Promise.resolve(),\n  computed: {\n    error: 'getError',\n    loading: 'isLoading',\n    list: 'getList',\n    pagination: 'getPagination',\n  },\n})\n")),Object(o.b)("h2",{id:"no-more-special-mutation-computed"},"No more special ",Object(o.b)("inlineCode",{parentName:"h2"},"@mutation")," computed"),Object(o.b)("p",null,"The special ",Object(o.b)("inlineCode",{parentName:"p"},"'@mutation'")," computed was removed.\nTo use mutations state you should write your selectors or better provide\ninline computed."),Object(o.b)("p",null,"From v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\n\nconst MyObj = rj({\n  mutations: {\n    writeStuff: rj.mutation.single({\n      effect: () => Promise.resolve(),\n      updater: 'updateData',\n    }),\n  },\n  effect: () => Promise.resolve(),\n  computed: {\n    writing: '@mutation.writeStuff.pending'\n  },\n})\n")),Object(o.b)("p",null,"To v3:"),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"If you want to save time and you love regex you can use find-replace with the following regex: ",Object(o.b)("br",null),"\n",Object(o.b)("strong",{parentName:"p"},"Find:"),Object(o.b)("br",null),"\n",Object(o.b)("inlineCode",{parentName:"p"},"('|\")@mutation\\.(.+)('|\")"),Object(o.b)("br",null),"\n",Object(o.b)("strong",{parentName:"p"},"Replace:"),Object(o.b)("br",null),"\n",Object(o.b)("inlineCode",{parentName:"p"},"s => s.mutations.$2")))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\n\nconst MyObj = rj({\n  mutations: {\n    writeStuff: rj.mutation.single({\n      effect: () => Promise.resolve(),\n      updater: 'updateData',\n    }),\n  },\n  effect: () => Promise.resolve(),\n  computed: {\n    writing: (s) => s.mutations.writeStuff.pending,\n  },\n})\n")),Object(o.b)("h2",{id:"selectors-use-all-state-instead-of-root-state"},"Selectors use all state instead of root state"),Object(o.b)("p",null,"In RocketJump v2 the state can change shape depending on your mutation confiuration,\nbut you selector was only related to root state:"),Object(o.b)("p",null,"In v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"{\n  pending: boolean,\n  error: any,\n  data: any\n}\n")),Object(o.b)("p",null,"In v3 the selector shape is:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"{\n  root: {\n    pending: boolean,\n    error: any,\n    data: any\n  }\n}\n")),Object(o.b)("p",null,"If you use RocketJump selectors your code still working.",Object(o.b)("br",null),"\nThe code below works bot in v2 and v3."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\n\nconst MyObj = rj({\n  selectors: ({ getData }) => {\n    getGoodData: (state) =>\n      (getData(state) ?? []).filter((a) => a.good === true)\n  },\n  effect: () => Promise.resolve(),\n})\n")),Object(o.b)("p",null,"While this code is break in v3:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\n\nconst MyObj = rj({\n  selectors: ({ getData }) => {\n    getGoodData: (state) => (state.data ?? []).filter((a) => a.good === true)\n  },\n  effect: () => Promise.resolve(),\n})\n")),Object(o.b)("p",null,"You can fix it by adding ",Object(o.b)("inlineCode",{parentName:"p"},"root")," or using RocketJump selectors.",Object(o.b)("br",null),"\nThis is the code translated for v3:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\n\nconst MyObj = rj({\n  selectors: ({ getData }) => {\n    getGoodData: (state) =>\n      (state.root.data ?? []).filter((a) => a.good === true)\n  },\n  effect: () => Promise.resolve(),\n})\n")),Object(o.b)("h4",{id:"selectors-and-actions-enhancers"},"Selectors and actions enhancers"),Object(o.b)("p",null,"In v2 you can write it as:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"rj({\n  selectors: {\n    newSelectors: prevSelectors => state => /** **/,\n  },\n  actions: {\n    newAction: prevActions => (...args) => /** **/,\n  }\n})\n")),Object(o.b)("p",null,"In v3 you can ",Object(o.b)("strong",{parentName:"p"},"ONLY")," use this syntax (the most used):"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"rj({\n  selectors: (prevSelectors) => ({\n    newSelectors: state => /** **/,\n  }),\n  actions: (prevActions) => ({\n    newAction: (...args) => /** **/,\n  })\n})\n")),Object(o.b)("h2",{id:"compose-reducer-init"},"Compose reducer init"),Object(o.b)("p",null,"In version 2.x the ",Object(o.b)("inlineCode",{parentName:"p"},"composeReducer")," ins't a simple composition utility, but it\nmerge the inital values of provided composed function, since v3 ",Object(o.b)("inlineCode",{parentName:"p"},"composeReducer")," simply\ncompose reducers."),Object(o.b)("p",null,"In v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const { reducer } = rj({\n  composeReducer: (state = { foo: 23 }) => state,\n})\n// Root State Shape:\n/*{\n  pending: false,\n  error: null,\n  data: null,\n  foo: 23,\n}*/\n")),Object(o.b)("p",null,"In v3:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const { reducer } = rj({\n  composeReducer: (state = { foo: 23 }) => state,\n})\n// Root State Shape:\n/*{\n  pending: false,\n  error: null,\n  data: null,\n}*/\n")),Object(o.b)("p",null,"You can achieve the same result by doing:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"const { reducer } = rj({\n  composeReducer: (state, action) => {\n    if (action.type === INIT) {\n      return { ...state, foo: 23 }\n    }\n    return state\n  },\n})\n")),Object(o.b)("h2",{id:"rename-makeaction-to-makeeffectaction"},"Rename ",Object(o.b)("inlineCode",{parentName:"h2"},"makeAction")," to ",Object(o.b)("inlineCode",{parentName:"h2"},"makeEffectAction")),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"makeAction")," name was too generic and confusing the only reason you have to\nuse this helper is works with side effect we renamed it to ",Object(o.b)("inlineCode",{parentName:"p"},"makeEffectAction"),"."),Object(o.b)("p",null,"From v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { makeAction } from 'react-rocketjump'\n")),Object(o.b)("p",null,"To v3:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { makeEffectAction } from 'react-rocketjump'\n")),Object(o.b)("h2",{id:"change-behaviour-of-custom-effect-action"},"Change behaviour of custom effect action"),Object(o.b)("p",null,"In version 2.x all custom ",Object(o.b)("em",{parentName:"p"},"effect action")," are always dispatched to reducer.\nEs:."),Object(o.b)("p",null,"In v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj, makeAction } from 'react-rocketjump'\n\nrj({\n  actions: () => ({\n    bu: () => makeAction('BU'),\n  }),\n})\n")),Object(o.b)("p",null,"In v2 calling ",Object(o.b)("inlineCode",{parentName:"p"},"actions.bu()")," was supposed to be dispatched in ",Object(o.b)("inlineCode",{parentName:"p"},"reducer"),".\nSince v3 you have to manually handle how ",Object(o.b)("inlineCode",{parentName:"p"},"'BU'")," type side effect is handled.\nTo simple dispatch it on reducer the code should be something like:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj, makeEffectAction } from 'react-rocketjump'\nimport { filter } from 'rxjs/operators'\n\nrj({\n  actions: () => ({\n    bu: () => makeEffectAction('BU'),\n  }),\n  addSideEffect: (actionObservable) =>\n    actionObservable.pipe(filter((action) => action.type === 'BU')),\n})\n")),Object(o.b)("p",null,"We also change the custom ",Object(o.b)("inlineCode",{parentName:"p"},"takeEffect")," signature to ",Object(o.b)("inlineCode",{parentName:"p"},"TakeEffectHanlder"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-ts"},"interface TakeEffectBag {\n  effect: EffectFn\n  getEffectCaller: GetEffectCallerFn\n  prefix: string\n}\n\ninterface StateObservable<S = any> extends Observable<S> {\n  value: S\n}\n\ntype TakeEffectHanlder = (\n  actionsObservable: Observable<EffectAction>,\n  stateObservable: StateObservable,\n  effectBag: TakeEffectBag,\n  ...extraArgs: any[]\n) => Observable<Action>\n")),Object(o.b)("h2",{id:"deprecated-rjconfigured"},"Deprecated ",Object(o.b)("inlineCode",{parentName:"h2"},"rj.configured()")),Object(o.b)("p",null,"We deprectated the ",Object(o.b)("del",{parentName:"p"},Object(o.b)("inlineCode",{parentName:"del"},"rj.configured()"))," syntax in favor of simply ",Object(o.b)("inlineCode",{parentName:"p"},"'configured'")," string\nwhen setting the ",Object(o.b)("inlineCode",{parentName:"p"},"effectCaller")," option."),Object(o.b)("p",null,"From v2:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\n\nconst MyObj = rj({\n  effectCaller: rj.configured(),\n  effect: () => Promise.resolve(),\n})\n")),Object(o.b)("p",null,"To v3:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\n\nconst MyObj = rj({\n  effectCaller: 'configured',\n  effect: () => Promise.resolve(),\n})\n")))}s.isMDXComponent=!0},134:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=p(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=p(n),m=r,d=b["".concat(c,".").concat(m)]||b[m]||u[m]||a;return n?o.a.createElement(d,i(i({ref:t},s),{},{components:n})):o.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);