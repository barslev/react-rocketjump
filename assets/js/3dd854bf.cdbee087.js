(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{134:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),l=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},p=function(e){var n=l(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=l(t),m=r,b=p["".concat(a,".").concat(m)]||p[m]||d[m]||o;return t?i.a.createElement(b,u(u({ref:n},s),{},{components:t})):i.a.createElement(b,u({ref:n},s))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u.mdxType="string"==typeof e?e:r,a[1]=u;for(var s=2;s<o;s++)a[s]=t[s];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},85:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return a})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return s}));var r=t(3),i=(t(0),t(134));const o={id:"plugin_mutations_pending",title:"Mutations Pending Plugin",sidebar_label:"Mutations Pending Plugin",slug:"/plugins/mutationsPending"},a={unversionedId:"plugin_mutations_pending",id:"plugin_mutations_pending",isDocsHomePage:!1,title:"Mutations Pending Plugin",description:"Use cases",source:"@site/docs/plugin_mutations_pending.md",slug:"/plugins/mutationsPending",permalink:"/react-rocketjump/docs/next/plugins/mutationsPending",editUrl:"https://github.com/inmagik/react-rocketjump/edit/master/website/docs/plugin_mutations_pending.md",version:"current",sidebar_label:"Mutations Pending Plugin",sidebar:"someSidebar",previous:{title:"Cache Plugin",permalink:"/react-rocketjump/docs/next/plugins/cache"},next:{title:"Migration from 2.x to 3.x",permalink:"/react-rocketjump/docs/next/migration-from-2-to-3"}},u=[{value:"Use cases",id:"use-cases",children:[]},{value:"Selectors",id:"selectors",children:[]},{value:"Usage",id:"usage",children:[]}],c={toc:u};function s({components:e,...n}){return Object(i.b)("wrapper",Object(r.a)({},c,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"use-cases"},"Use cases"),Object(i.b)("p",null,"This plugin helps you tracking pending state for multiple mutation. ",Object(i.b)("br",null),"\nThis is useful if you want to show in your UI a global loader if any mutations\nis in pending state. ",Object(i.b)("br",null),"\nThis plugins is implemented with it's own piece of state so you can use it\nwithout have to specfy reducer on your mutations. ",Object(i.b)("br",null),"\nUnder the hood a counter is increment for every mutation ",Object(i.b)("inlineCode",{parentName:"p"},"PENDING")," and decrement for\nevery mutation ",Object(i.b)("inlineCode",{parentName:"p"},"SUCCESS"),", ",Object(i.b)("inlineCode",{parentName:"p"},"FAILURE"),"."),Object(i.b)("h2",{id:"selectors"},"Selectors"),Object(i.b)("p",null,"This plugin inject the ",Object(i.b)("inlineCode",{parentName:"p"},"anyMutationPending")," selector that returs a ",Object(i.b)("em",{parentName:"p"},"boolean"),"."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"If you call it without args the plugin tracks ",Object(i.b)("strong",{parentName:"p"},"ALL")," mutations."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\nimport rjMutationsPending from 'react-rocketjump/plugins/mutationsPending'\n\nconst MyObj = rj(rjMutationsPending(), {\n  // ...\n  computed: {\n    busy: 'anyMutationPending',\n    // ...\n  },\n})\n")),Object(i.b)("p",null,"You can pass it a list that specify which mutations should tracked:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { rj } from 'react-rocketjump'\nimport rjMutationsPending from 'react-rocketjump/plugins/mutationsPending'\n\nconst MyObj = rj(rjMutationsPending(['updateStuff', 'deleteStuff']), {\n  mutations: {\n    updateStuff: {\n      // ...\n    },\n    createStuff: {\n      // ...\n    },\n    deleteStuff: {\n      // ...\n    },\n  },\n  // ...\n  computed: {\n    busy: 'anyMutationPending',\n    // ...\n  },\n})\n")))}s.isMDXComponent=!0}}]);